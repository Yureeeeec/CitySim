openapi: 3.0.3
info:
  title: CitySim API
  version: 2.0.0
  description: |
    API для симуляции и анализа городских маршрутов.
    Позволяет загружать сценарии, рассчитывать транспортные показатели и анализировать результаты.

servers:
  - url: https://api.citysim.io/v1

tags:
  - name: Auth
    description: Авторизация и аутентификация
  - name: Users
    description: Управление пользователями
  - name: Scenarios
    description: Работа со сценариями маршрутов
  - name: Simulation
    description: Запуск симуляций и анализ результатов

paths:

  # =========================================
  # Аутентификация
  # =========================================
  /auth/login:
    post:
      tags: [Auth]
      summary: Авторизация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            example:
              username: "analyst1"
              password: "securepass123"
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
              example:
                access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

  # =========================================
  # Управление пользователями
  # =========================================
  /users:
    post:
      tags: [Users]
      summary: Создание нового пользователя
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
            example:
              username: "new_user"
              email: "user@city.gov"
              role: "analyst"
      responses:
        '201':
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{user_id}:
    put:
      tags: [Users]
      summary: Обновление данных пользователя
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: Данные обновлены
    delete:
      tags: [Users]
      summary: Удаление пользователя
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Пользователь удален
        '403':
          description: Нет прав на удаление

  # =========================================
  # Работа со сценариями
  # =========================================
  /scenarios:
    get:
      tags: [Scenarios]
      summary: Получение списка сценариев
      security:
        - BearerAuth: []
      parameters:
        - name: name
          in: query
          description: Фильтр по названию
          schema:
            type: string
        - name: transport_type
          in: query
          description: Тип транспорта (bus, tram, metro)
          schema:
            type: string
        - name: sort_by
          in: query
          description: Сортировка (created_at, name)
          schema:
            type: string
        - name: limit
          in: query
          description: Лимит результатов
          schema:
            type: integer
            default: 10
        - name: cursor
          in: query
          description: Ключ пагинации
          schema:
            type: string
      responses:
        '200':
          description: Список сценариев
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioListResponse'

    post:
      tags: [Scenarios]
      summary: Загрузка нового сценария
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                scenario_name:
                  type: string
      responses:
        '201':
          description: Сценарий загружен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'

  /scenarios/{scenario_id}:
    delete:
      tags: [Scenarios]
      summary: Удаление сценария
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: scenario_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Успешно удалено
        '404':
          description: Сценарий не найден
        '403':
          description: Нет прав на удаление

    post:
      tags: [Scenarios]
      summary: Восстановление версии сценария
      parameters:
        - in: path
          name: scenario_id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                version:
                  type: string
                  description: Хэш версии
      responses:
        '200':
          description: Версия восстановлена

  # =========================================
  # Управление маршрутами и остановками
  # =========================================
  /scenarios/{scenario_id}/routes:
    post:
      tags: [Scenarios]
      summary: Создание маршрута
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: scenario_id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteCreateRequest'
      responses:
        '201':
          description: Маршрут создан

  /routes/{route_id}/stops:
    post:
      tags: [Scenarios]
      summary: Добавление остановки
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: route_id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopCreateRequest'
      responses:
        '201':
          description: Остановка добавлена

  # =========================================
  # Симуляции
  # =========================================
  /simulation:
    post:
      tags: [Simulation]
      summary: Запуск моделирования
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimulationRequest'
            example:
              scenario_id: "550e8400-e29b-41d4-a716-446655440000"
              parameters:
                start_time: "07:00"
                end_time: "10:00"
                interval_minutes: 5
      responses:
        '200':
          description: Расчёт запущен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationResponse'

  /simulation/{calculation_id}/results:
    get:
      tags: [Simulation]
      summary: Результаты моделирования
      security:
        - BearerAuth: []
      parameters:
        - name: calculation_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Метрики симуляции
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationResults'
        '404':
          description: Расчет не найден

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # ================= Базовые схемы =================
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required: [username, password]

    AuthResponse:
      type: object
      properties:
        access_token:
          type: string

    # ================= Пользователи =================
    UserCreateRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [admin, analyst, viewer]
      required: [username, email, role]

    UserUpdateRequest:
      type: object
      properties:
        email:
          type: string
        role:
          type: string

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
        role:
          type: string

    # ================= Сценарии =================
    Scenario:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        created_at:
          type: string
          format: date-time

    ScenarioListResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Scenario'
        next_cursor:
          type: string

    # ================= Маршруты и остановки =================
    RouteCreateRequest:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum: [bus, tram, metro]

    StopCreateRequest:
      type: object
      properties:
        name:
          type: string
        lat:
          type: number
        lon:
          type: number
        order:
          type: integer

    # ================= Симуляции =================
    SimulationRequest:
      type: object
      properties:
        scenario_id:
          type: string
          format: uuid
        parameters:
          type: object
          properties:
            start_time:
              type: string
            end_time:
              type: string
            interval_minutes:
              type: integer
      required: [scenario_id, parameters]

    SimulationResponse:
      type: object
      properties:
        calculation_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [queued, processing, done]

    SimulationResults:
      type: object
      properties:
        calculation_id:
          type: string
          format: uuid
        metrics:
          type: object
          properties:
            coverage_percent:
              type: number
            average_travel_time:
              type: number
            overload_score:
              type: number
